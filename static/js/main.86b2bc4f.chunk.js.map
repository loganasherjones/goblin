{"version":3,"sources":["components/Header.js","components/Home.js","models.js","components/StyledBadge.js","components/GoblinAvatar.js","components/SocialLinks.js","components/GoblinCard.js","components/Goblins.js","components/Basics.js","components/SearchWizard.js","components/Resources.js","components/News.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","leftIcon","marginRight","spacing","cursor","title","display","breakpoints","up","noDecorate","textDecoration","color","PrimarySearchAppBar","classes","history","useHistory","navigate","useCallback","path","push","className","AppBar","position","Toolbar","onClick","Typography","variant","noWrap","to","underline","heroContent","backgroundColor","palette","background","paper","padding","flexDirection","heroButtons","marginTop","content","flex","card","height","section","resourceButton","width","marginLeft","Home","Fragment","Container","maxWidth","component","align","gutterBottom","paragraph","Grid","container","justify","item","Button","RouterLink","xs","sm","md","Card","CardContent","CardActions","size","alignItems","UsernameShape","PropTypes","shape","username","string","PatreonShape","RedditShape","TwitterShape","YouTubeShape","channelName","DiscordShape","inviteCode","TwitchShape","PersonalShape","rssFeed","url","SocialShape","patreon","reddit","twitter","youtube","discord","twitch","personal","name","description","tags","arrayOf","social","StyledBadge","withStyles","badge","boxShadow","top","left","borderRadius","Badge","GoblinAvatar","goblin","this","props","avatar","label","altText","Avatar","aria-label","src","alt","letter","length","toUpperCase","overlap","anchorOrigin","vertical","horizontal","Component","SocialLinks","icons","link","icon","faPatreon","faTwitter","faReddit","faYoutube","code","faDiscord","faTwitch","faExternalLinkAlt","map","index","IconButton","Link","href","target","rel","GoblinCard","CardHeader","subheader","tag","Chip","React","paddingTop","cardGrid","paddingBottom","cardContainer","cardMedia","cardContent","Goblins","direction","Basics","SearchWizard","Resources","News","CardMedia","image","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86b2bc4f.chunk.js","sourcesContent":["import React, { useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  leftIcon: {\n    marginRight: theme.spacing(2),\n    cursor: \"pointer\",\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  noDecorate: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n    marginRight: theme.spacing(3),\n  },\n}));\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n  const history = useHistory();\n  const navigate = useCallback((path) => history.push(\"/\"), [history]);\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <MenuBookIcon\n            className={classes.leftIcon}\n            onClick={() => navigate(\"/\")}\n          />\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            <Link\n              to=\"/\"\n              className={classes.noDecorate}\n              color=\"inherit\"\n              underline=\"none\"\n            >\n              The Goblin Archives\n            </Link>\n          </Typography>\n          <div className={classes.grow} />\n          <Typography>\n            <Link\n              to=\"/news\"\n              className={classes.noDecorate}\n              color=\"inherit\"\n              underline=\"none\"\n            >\n              News\n            </Link>\n          </Typography>\n          <Typography>\n            <Link\n              to=\"/news\"\n              className={classes.noDecorate}\n              color=\"inherit\"\n              underline=\"none\"\n            >\n              Resources\n            </Link>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n    flexDirection: \"column\",\n  },\n  heroButtons: { marginTop: theme.spacing(4) },\n  content: { flex: \"1 0 auto\" },\n  card: { display: \"flex\", flexDirection: \"column\", height: \"100%\" },\n  section: { marginTop: theme.spacing(5) },\n  resourceButton: { width: \"100%\", marginLeft: \"auto\" },\n}));\n\nfunction Home() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Header />\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"sm\">\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            The Goblin Archives\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            color=\"textSecondary\"\n            paragraph\n          >\n            If you want to make millions of Gold in World of Warcraft, you've\n            come to the right place. Here at The Goblin Archives, we take the\n            best content from across the internet and make it available for you.\n            Ready to start making some gold?\n          </Typography>\n          <div className={classes.heroButtons}>\n            <Grid container spacing={2} justify=\"center\">\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  component={RouterLink}\n                  to=\"search\"\n                >\n                  Get Started\n                </Button>\n              </Grid>\n            </Grid>\n          </div>\n        </Container>\n        <Container maxWidth=\"md\" className={classes.section}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} sm={6} md={4}>\n              <Card className={classes.card}>\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    News\n                  </Typography>\n                  <Typography>\n                    See the latest news, videos, podcasts and more from the\n                    community\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button\n                    size=\"small\"\n                    color=\"primary\"\n                    component={RouterLink}\n                    to=\"/news\"\n                  >\n                    View\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n            <Grid item xs={12} sm={6} md={4}>\n              <Card className={classes.card}>\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    Beginners Guide\n                  </Typography>\n                  <Typography>\n                    This page is for people brand new to Gold Making and will\n                    take you through the basics\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button\n                    size=\"small\"\n                    color=\"primary\"\n                    component={RouterLink}\n                    to=\"/beginners\"\n                  >\n                    View\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n            <Grid item xs={12} sm={6} md={4}>\n              <Card className={classes.card}>\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    Goblin Gurus\n                  </Typography>\n                  <Typography>\n                    Check out some of our featured Goblin Gurus. They provide\n                    the content!\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button\n                    size=\"small\"\n                    color=\"primary\"\n                    component={RouterLink}\n                    to=\"/goblins\"\n                  >\n                    View\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          </Grid>\n        </Container>\n        <Container maxWidth=\"md\" className={classes.section}>\n          <Grid container alignItems=\"center\" justify=\"center\">\n            <Grid item xs={12} md={8}>\n              <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                Gold Making Resources\n              </Typography>\n              <Typography\n                variant=\"subtitle1\"\n                color=\"textSecondary\"\n                component=\"p\"\n              >\n                We collect lots of different data about gold making here. You\n                can use this area to explore all of the various resources we've\n                gathered. From YouTube to Twitch to Podcasts to Blog posts, you\n                can find it all here.\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <Button\n                variant=\"contained\"\n                className={classes.resourceButton}\n                component={RouterLink}\n                to=\"/resources\"\n              >\n                Explore\n              </Button>\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Home;\n","import { PropTypes } from \"prop-types\";\n\nexport const UsernameShape = PropTypes.shape({ username: PropTypes.string });\nexport const PatreonShape = UsernameShape;\nexport const RedditShape = UsernameShape;\nexport const TwitterShape = UsernameShape;\nexport const YouTubeShape = PropTypes.shape({ channelName: PropTypes.string });\nexport const DiscordShape = PropTypes.shape({ inviteCode: PropTypes.string });\nexport const TwitchShape = UsernameShape;\nexport const PersonalShape = PropTypes.shape({\n  rssFeed: PropTypes.string,\n  url: PropTypes.string,\n});\n\nexport const SocialShape = PropTypes.shape({\n  patreon: PatreonShape,\n  reddit: RedditShape,\n  twitter: TwitterShape,\n  youtube: YouTubeShape,\n  discord: DiscordShape,\n  twitch: TwitchShape,\n  personal: PersonalShape,\n});\n\nexport const GoblinShape = PropTypes.shape({\n  name: PropTypes.string,\n  description: PropTypes.string,\n  tags: PropTypes.arrayOf(PropTypes.string),\n  social: SocialShape,\n});\n","import { Badge, withStyles } from \"@material-ui/core\";\n\nconst StyledBadge = withStyles((theme) => ({\n  badge: {\n    backgroundColor: \"#E91917\",\n    color: \"#E91917\",\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    \"&::after\": {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: \"50%\",\n      content: '\"\"',\n    },\n  },\n}))(Badge);\n\nexport default StyledBadge;\n","import React, { Component } from \"react\";\nimport { GoblinShape } from \"../models\";\nimport StyledBadge from \"./StyledBadge\";\nimport { Avatar } from \"@material-ui/core\";\n\nclass GoblinAvatar extends Component {\n  render() {\n    const { goblin } = this.props;\n\n    let url;\n    if (goblin.social.youtube && goblin.social.youtube.channelName) {\n      url = `https://unavatar.now.sh/youtube/${goblin.social.youtube.channelName}`;\n    } else if (goblin.social.twitter && goblin.social.twitter.username) {\n      url = `https://unavatar.now.sh/twitter/${goblin.social.twitter.username}`;\n    } else if (goblin.social.reddit && goblin.social.reddit.username) {\n      url = `https://unavatar.now.sh/reddit/${goblin.social.reddit.username}`;\n    }\n\n    const label = `${goblin.name} Avatar`;\n    const altText = goblin.name;\n    let avatar;\n    if (url) {\n      avatar = <Avatar aria-label={label} src={url} alt={altText} />;\n    } else {\n      const letter =\n        goblin.name.length > 0 ? goblin.name[0].toUpperCase() : \"?\";\n      avatar = (\n        <Avatar aria-label={label} alt={altText}>\n          {letter}\n        </Avatar>\n      );\n    }\n    return (\n      <StyledBadge\n        title=\"Live Now\"\n        overlap=\"circle\"\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        variant=\"dot\"\n      >\n        {avatar}\n      </StyledBadge>\n    );\n  }\n}\n\nGoblinAvatar.propTypes = {\n  goblin: GoblinShape,\n};\n\nexport default GoblinAvatar;\n","import React, { Component } from \"react\";\nimport { SocialShape } from \"../models\";\nimport { IconButton, Link } from \"@material-ui/core\";\nimport { faPatreon } from \"@fortawesome/free-brands-svg-icons/faPatreon\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons/faTwitter\";\nimport { faReddit } from \"@fortawesome/free-brands-svg-icons/faReddit\";\nimport { faYoutube } from \"@fortawesome/free-brands-svg-icons/faYoutube\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons/faDiscord\";\nimport { faTwitch } from \"@fortawesome/free-brands-svg-icons\";\nimport { faExternalLinkAlt } from \"@fortawesome/free-solid-svg-icons/faExternalLinkAlt\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass SocialLinks extends Component {\n  render() {\n    const { social } = this.props;\n    const icons = [];\n\n    if (social.patreon && social.patreon.username) {\n      const username = social.patreon.username;\n      icons.push({\n        link: `https://www.patreon.com/${username}/posts`,\n        icon: faPatreon,\n        color: \"#F6424D\",\n      });\n    }\n\n    if (social.twitter && social.twitter.username) {\n      const username = social.twitter.username;\n      icons.push({\n        link: `https://twitter.com/${username}`,\n        icon: faTwitter,\n        color: \"#37A1F2\",\n      });\n    }\n\n    if (social.reddit && social.reddit.username) {\n      const username = social.reddit.username;\n      icons.push({\n        link: `https://reddit.com/user/${username}/`,\n        icon: faReddit,\n        color: \"#F64504\",\n      });\n    }\n\n    if (social.youtube && social.youtube.channelName) {\n      const channelName = social.youtube.channelName;\n      icons.push({\n        link: `https://youtube.com/channel/${channelName}`,\n        icon: faYoutube,\n        color: \"#F50602\",\n      });\n    }\n\n    if (social.discord && social.discord.inviteCode) {\n      // TODO: This isn't quite right. Shouldn't be username\n      const code = social.discord.inviteCode;\n      icons.push({\n        link: `https://discord.gg/${code}`,\n        icon: faDiscord,\n        color: \"#7289DA\",\n      });\n    }\n\n    if (social.twitch && social.twitch.username) {\n      const username = social.twitch.username;\n      icons.push({\n        link: `https://twitch.tv/${username}`,\n        icon: faTwitch,\n        color: \"#9147FF\",\n      });\n    }\n\n    if (social.personal) {\n      icons.push({\n        link: social.personal,\n        icon: faExternalLinkAlt,\n        color: \"#ADB5BE\",\n      });\n    }\n\n    return (\n      <React.Fragment>\n        {icons.map((icon, index) => (\n          <IconButton\n            key={index}\n            component={Link}\n            href={icon.link}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <FontAwesomeIcon icon={icon.icon} color={icon.color} />\n          </IconButton>\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nSocialLinks.propTypes = {\n  social: SocialShape,\n};\n\nexport default SocialLinks;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  Chip,\n  withStyles,\n} from \"@material-ui/core\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport GoblinAvatar from \"./GoblinAvatar\";\nimport SocialLinks from \"./SocialLinks\";\nimport { GoblinShape } from \"../models\";\n\nconst styles = (theme) => ({\n  tag: { marginRight: theme.spacing(1) },\n  description: { paddingTop: theme.spacing(1) },\n});\n\nclass GoblinCard extends React.Component {\n  render() {\n    const { goblin, classes } = this.props;\n    const avatar = <GoblinAvatar goblin={goblin} />;\n    return (\n      <Card>\n        <CardHeader avatar={avatar} title={goblin.name} subheader=\"Add Date\" />\n        <CardContent>\n          {goblin.tags.map((tag, index) => (\n            <Chip key={index} className={classes.tag} label={tag} />\n          ))}\n          <Typography\n            className={classes.description}\n            variant=\"body2\"\n            color=\"textSecondary\"\n            component=\"p\"\n          >\n            TODO: Add a description\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <SocialLinks social={goblin.social} />\n        </CardActions>\n      </Card>\n    );\n  }\n}\n\nGoblinCard.propTypes = {\n  goblin: GoblinShape.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(GoblinCard);\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport GoblinCard from \"./GoblinCard\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardContainer: { padding: theme.spacing(2) },\n  cardMedia: { paddingTop: \"56.25%\" },\n  cardContent: { flexGrow: 1 },\n  section: { paddingTop: theme.spacing(2) },\n}));\n\nfunction Goblins() {\n  const classes = useStyles();\n  const goblins = [\n    {\n      name: \"BilisOnyxia\",\n      tags: [\"Flipping\", \"Multiple Servers\", \"Retail\"],\n      social: {\n        patreon: { username: \"BilisOnyxia\" },\n        twitter: { username: \"BilisOnyxia\" },\n        reddit: null,\n        youtube: null,\n        discord: null,\n        twitch: null,\n        personal: null,\n      },\n    },\n  ];\n  return (\n    <React.Fragment>\n      <Header />\n      <Container maxWidth=\"md\">\n        <Typography\n          component=\"h4\"\n          variant=\"h4\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom\n        >\n          Meet the Gurus\n        </Typography>\n        <Typography\n          component=\"h5\"\n          variant=\"h5\"\n          align=\"center\"\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          These are the people hard at work producing content to help you make\n          gold. Consider supporting them, by giving them a like, follow or\n          patreon pledge\n        </Typography>\n      </Container>\n      <Container maxWidth=\"md\" className={classes.section}>\n        <Grid container direction=\"row\">\n          {goblins.map((goblin, index) => (\n            <Grid\n              key={index}\n              item\n              sm={6}\n              xs={12}\n              className={classes.cardContainer}\n            >\n              <GoblinCard goblin={goblin} />\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default Goblins;\n","import React from \"react\";\nimport Header from \"./Header\";\n\nfunction Basics() {\n  return (\n    <React.Fragment>\n      <Header />\n      <div>TODO: Write up the basics</div>\n    </React.Fragment>\n  );\n}\n\nexport default Basics;\n","import React from 'react';\n\nfunction SearchWizard(props) {\n    return (\n        <div>TODO: Create a search wizrad</div>\n    );\n}\n\nexport default SearchWizard;\n","import Header from \"./Header\";\nimport React from \"react\";\n\nfunction Resources() {\n  return (\n    <React.Fragment>\n      <Header />\n      <div>TODO: Write up the Resources</div>\n    </React.Fragment>\n  );\n}\n\nexport default Resources;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: { paddingTop: \"56.25%\" },\n  cardContent: { flexGrow: 1 },\n  section: { paddingTop: theme.spacing(2) },\n}));\n\nfunction News(props) {\n  const classes = useStyles();\n  const cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  return (\n    <React.Fragment>\n      <Header />\n      <Container maxWidth=\"md\">\n        <Typography\n          component=\"h3\"\n          variant=\"h3\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom\n        >\n          Wow Gold Making News\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          Here is the latest and greatest news from our{\" \"}\n          <Link to=\"/goblins\">Goblin Gurus</Link>\n        </Typography>\n      </Container>\n      <Container maxWidth=\"md\" className={classes.section}>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-evenly\"\n          alignItems=\"center\"\n        >\n          <Grid item sm={6}>\n            <Typography variant=\"h5\">U.S. Token Price</Typography>\n            <Typography paragraph>180,000 g</Typography>\n          </Grid>\n          <Grid item sm={6}>\n            <Typography variant=\"h5\" align=\"right\">\n              E.U. Token Price\n            </Typography>\n            <Typography paragraph align=\"right\">\n              220,000 g\n            </Typography>\n          </Grid>\n        </Grid>\n      </Container>\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        <Grid container spacing={4}>\n          {cards.map((card) => (\n            <Grid item key={card} xs={12} sm={6} md={4}>\n              <Card className={classes.card}>\n                <CardMedia\n                  className={classes.cardMedia}\n                  image=\"https://source.unsplash.com/random\"\n                  title=\"Image title\"\n                />\n                <CardContent className={classes.cardContent}>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    Title\n                  </Typography>\n                  <Typography>\n                    This is where some description would go. It would take you\n                    to the appropriate blog post, or video\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button size=\"small\" color=\"primary\">\n                    View\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default News;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Goblins from \"./components/Goblins\";\nimport Basics from \"./components/Basics\";\nimport SearchWizard from \"./components/SearchWizard\";\nimport Resources from \"./components/Resources\";\nimport News from \"./components/News\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/goblins\">\n          <Goblins />\n        </Route>\n        <Route path=\"/beginners\">\n          <Basics />\n        </Route>\n        <Route path=\"/search\">\n          <SearchWizard />\n        </Route>\n        <Route path=\"/resources\">\n          <Resources />\n        </Route>\n        <Route path=\"/news\">\n          <News />\n        </Route>\n        <Route path=\"*\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}